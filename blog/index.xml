<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>

    <link>https://xinlake.life/blog/</link>
    <title>博客 on XinLake</title>
    <description>Recent content  in 博客  on XinLake</description>
    <language>zh-CN</language>
    <generator>Hugo 0.75.1</generator>

    <managingEditor>xinlake@outlook.com (XinLake)</managingEditor>
    <webMaster>xinlake@outlook.com (XinLake)</webMaster>

    

    
    <lastBuildDate>2020-04-06, Mon</lastBuildDate>
    

    
    <atom:link href="https://xinlake.life/blog/index.xml" rel="self" type="application/rss+xml" />
    

    
    <item>
        <title>Privch 0.9.0</title>
        <link>https://xinlake.life/blog/2020/04-privch-0.9.0/</link>
        <pubDate>2020-04-06, Mon</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/04-privch-0.9.0/</guid>
        <description>&lt;p&gt;XTransmit 项目更名为 &lt;strong&gt;Privch&lt;/strong&gt;，因为 XTransmit 这个名称的 com 域名已经被注册了。我是 2019 年 08 月份开源的，10 月份发了第一个 Release，前不久准备注册域名查了一下发现 xtransmit.com 已经在 2019 年 12 月被人注册了。注册商显示为 godaddy，我通过 godaddy 尝试和域名注册者取得联系，问对方是否愿意转让，可是没有得到任何回应，无奈只好放弃原名称。不过，新的名称 &lt;strong&gt;Privch&lt;/strong&gt; 意义更为准确，也更加友好。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.8.0</title>
        <link>https://xinlake.life/blog/2020/02-xtransmit-0.8.0/</link>
        <pubDate>2020-02-23, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/02-xtransmit-0.8.0/</guid>
        <description>&lt;p&gt;这次更新做的是减法，&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.8.0&lt;/a&gt; 移除了自定义数据传输模块，移到另外一个工程去了。那个模块通常用于绕过前端页面直接向目标站点发送特定功能的数据包（如评论、点赞、阅读数等等），和主要功能交集不多，移除之后程序会变小。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>乡镇见闻</title>
        <link>https://xinlake.life/blog/2020/02-where-is-your-wall/</link>
        <pubDate>2020-02-21, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/02-where-is-your-wall/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;我没错&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不远处听到一个男人的叫喊伴随着摔东西的异响，声音引来了附近的人群观看。出声音的地方是一个经营快递业务的门店，主角是男人和他母亲，男人看上去三四十岁估计是店老板，他母亲看上去有五六十岁应该和儿孙同住。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.7.0 新增支持 V2Ray</title>
        <link>https://xinlake.life/blog/2020/02-xtransmit-0.7.0/</link>
        <pubDate>2020-02-12, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/02-xtransmit-0.7.0/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.7.0&lt;/a&gt; 新增了对 V2Ray 的支持并且继承了原有的界面及操作模式 ，从系统栏图标扫描屏幕二维码时可以自动识别服务器类别（Shadowsocks、V2Ray），并向对应的列表添加服务器。如果要从 Shadowsocks 线路切换到 V2Ray 线路，只需要双击 V2Ray 服务器即可，不需要任何额外的操作。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.6.0</title>
        <link>https://xinlake.life/blog/2020/02-xtransmit-0.6.0/</link>
        <pubDate>2020-02-04, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/02-xtransmit-0.6.0/</guid>
        <description>&lt;p&gt;从 &lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.6.0&lt;/a&gt; 开始不需要安装运行时库了，我也是偶然在一台新电脑上运行 XTransmit 才发现这个情况，开发用的电脑自带了运行时库，一切都很正常，而普通电脑系统则有可能弹出缺少运行时库的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.5.5</title>
        <link>https://xinlake.life/blog/2020/01-xtransmit-0.5.5/</link>
        <pubDate>2020-01-26, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2020/01-xtransmit-0.5.5/</guid>
        <description>&lt;p&gt;祝大家新春愉快，合家欢乐，事事顺心！&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.5.5&lt;/a&gt; 做了一些改进，我觉得开始像个软件了。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.5.4</title>
        <link>https://xinlake.life/blog/2019/12-xtransmit-0.5.4-cn/</link>
        <pubDate>2019-12-31, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/12-xtransmit-0.5.4-cn/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.5.4&lt;/a&gt;，这是一个维护性更新，更新了依赖的组件，修复了发现的问题，还做了少量的改进。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.5.4</title>
        <link>https://xinlake.life/blog/2019/12-xtransmit-0.5.4-en/</link>
        <pubDate>2019-12-31, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/12-xtransmit-0.5.4-en/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.5.4&lt;/a&gt;, It is a maintenance release, upgraded dependencies, fixed known issues, and have made some improvements.&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Shadowsocks Android Modified v4.8.7</title>
        <link>https://xinlake.life/blog/2019/12-shadowsocks-android-modified/</link>
        <pubDate>2019-12-18, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/12-shadowsocks-android-modified/</guid>
        <description>&lt;p&gt;Shadowsocks Android 修改版跟进到了 4.8.7，除了更新了依赖库版本和 TCP Fast Open（简称 TFO）选项的默认值之外没有其他变化。源码在这里 &lt;a href=&#34;https://github.com/xinlake/shadowsocks-android-modified&#34;&gt;shadowsocks-android-modified&lt;/a&gt;，APK 可以在 &lt;a href=&#34;https://github.com/xinlake/shadowsocks-android-modified/releases&#34;&gt;GitHub Releases&lt;/a&gt; 里下载。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Shadowsocks Android Modified v4.8.5</title>
        <link>https://xinlake.life/blog/2019/10-shadowsocks-android-modified/</link>
        <pubDate>2019-10-21, Mon</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/10-shadowsocks-android-modified/</guid>
        <description>&lt;p&gt;这是一个 Shadowsocks Android 的修改版，移除了广告，去掉了对 Google 服务的依赖并使用本地模块来支持必要的功能，去掉了 TV 模块、插件功能，简化了代理模式和相关的设置及数据。这个版本适用于经常连接公共服务器的情况，可以很好的在国内运行，源码在这里 &lt;a href=&#34;https://github.com/xinlake/shadowsocks-android-modified&#34;&gt;shadowsocks-android-modified&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Privoxy Windows</title>
        <link>https://xinlake.life/blog/2019/10-privoxy-windows/</link>
        <pubDate>2019-10-19, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/10-privoxy-windows/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://www.privoxy.org/&#34;&gt;Privoxy&lt;/a&gt; 是具有高级过滤功能的非缓存 Web 代理（同类软件里分缓存和非缓存两种），可增强隐私性。Privoxy 常常作为一个辅助的流量转发模块，工作于操作系统代理接口和 SOCKS5 代理服务接口之间，将本地 HTTP 流量转发到本地或远端 SOCKS5 服务器，从而让 Web 应用可以直接使用 SOCKS5 代理且不需要任何设置，被广泛应用在各种连接国际网络的工具里。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.5.3</title>
        <link>https://xinlake.life/blog/2019/10-xtransmit-0.5.3-en/</link>
        <pubDate>2019-10-11, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/10-xtransmit-0.5.3-en/</guid>
        <description>&lt;p&gt;I released the &lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.5.3&lt;/a&gt;, the initial version number is 0.5.0, After a small update and some improvements, it is upgraded to 0.5.3. The last number (19142) of the version number is only related to Build, it changes every time Build, there is no other meaning.&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>XTransmit 0.5.3</title>
        <link>https://xinlake.life/blog/2019/10-xtransmit-0.5.3/</link>
        <pubDate>2019-10-11, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/10-xtransmit-0.5.3/</guid>
        <description>&lt;p&gt;我发布了 &lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/releases&#34;&gt;XTransmit 0.5.3&lt;/a&gt; 版本，版本号初始设置是 0.5.0 经过小幅更新和一些完善即升级到了 0.5.3。版本号的最后一个数字（19142）只和 Build 有关，每次 Build 都会变化，没有其他意义。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Hugo PowerShell 部署脚本</title>
        <link>https://xinlake.life/blog/2019/09-hugo-powershell-deploy-script/</link>
        <pubDate>2019-09-21, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/09-hugo-powershell-deploy-script/</guid>
        <description>&lt;p&gt;Hugo 生成的站点默认位于站点路径下的 public 文件夹，即 &lt;code&gt;site-path\public&lt;/code&gt;。在站点路径下新建一个用于部署的文件夹，如 &lt;code&gt;site-path\.deploy&lt;/code&gt;，这个文件夹下包含 PowerShell 部署脚本 &lt;code&gt;deploy.ps1&lt;/code&gt; 和 Git 仓库 &lt;code&gt;git-repo&lt;/code&gt;。hugo server 生成站点后执行 &lt;code&gt;deploy.ps1&lt;/code&gt; 即可自动复制新生成的站点文件到仓库并且推送到远端 Git 服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Blog v2</title>
        <link>https://xinlake.life/blog/2019/09-blog-v2/</link>
        <pubDate>2019-09-18, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/09-blog-v2/</guid>
        <description>&lt;p&gt;刚开始建博客时我说“选用了对 Windows 系统更加友好的 Hexo”，今天我换上了 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;，因为 Hugo 更加友好。他可以简单的在各种平台下运行，而且对使用者也没有特别要求。不需要关心 Node.js 版本也不需要学习 npm 的使用。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>西湖映像</title>
        <link>https://xinlake.life/blog/2019/09-west-lake-impression/</link>
        <pubDate>2019-09-05, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/09-west-lake-impression/</guid>
        <description>&lt;p&gt;说走就走的旅行，说起来容易行动起来可有点难。即便是短短几天，也会有一些难以放下的东西要立刻放下，会有一些必须准备的东西要马上完成，还需要对一些可能的未知的状况有大概的了解，如何应对得要心里有数。拿起包包去看世界，是一件很需要勇气和智慧的事情。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>无法访问 GMS</title>
        <link>https://xinlake.life/blog/2019/09-unable-to-access-gms/</link>
        <pubDate>2019-09-01, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/09-unable-to-access-gms/</guid>
        <description>&lt;p&gt;GMS（Google Mobile Services）为 Android 应用提供了基于云服务的 API，包括广告、游戏、地图、视觉图像、身份验证、电子钱包、App 分析等等很多功能，GMS API 被国际化的 App 广泛使用。GMS 不是 AOSP（Android Open Source Project）的一部分，只存在于通过授权的设备里，如果设备没有 GMS 那么 App 运行时可能会像下面这样。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Created a small program</title>
        <link>https://xinlake.life/blog/2019/08-created-a-small-program-en/</link>
        <pubDate>2019-08-30, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/08-created-a-small-program-en/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/&#34;&gt;XTransmit&lt;/a&gt; is a Windows .NET WPF desktop application, with shadowsocks client, simple curl GUI tool and network speed display panel integrated. &lt;strong&gt;XTransmit does not provide shadowsocks services&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>造了一个小程序</title>
        <link>https://xinlake.life/blog/2019/08-created-a-small-program/</link>
        <pubDate>2019-08-30, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/08-created-a-small-program/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://github.com/xinlake/xtransmit-windows/&#34;&gt;XTransmit&lt;/a&gt; 是一个 Windows .NET WPF 桌面应用程序，集成了 shadowsocks 客户端、简易的 curl GUI 工具、网络速度显示面板。&lt;strong&gt;软件不提供 shadowsocks 服务&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>给版本添加构建信息</title>
        <link>https://xinlake.life/blog/2019/08-add-build-infos-for-version/</link>
        <pubDate>2019-08-22, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/08-add-build-infos-for-version/</guid>
        <description>&lt;p&gt;很多软件的版本号里都有 Build 次数、时间、主机这样的构建信息，这里我介绍一种 Android Studio 里通过 Gradle 脚本自动创建以及更新构建信息的方法，每次构建的时候自动更新版本的 Build 次数、时间、主机等信息，不需要手动设置。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>谈谈 Shadowsocks</title>
        <link>https://xinlake.life/blog/2019/08-talk-about-shadowsocks/</link>
        <pubDate>2019-08-17, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/08-talk-about-shadowsocks/</guid>
        <description>&lt;p&gt;Shadowsocks（简称为 SS）作为连接国际网络的方式之一，被技术人士使用得比较多。和 VPN 类似，SS 也是基于“中转站”的模式，并且支持非全程加密。相对于 VPN 来说 SS 有较强的技术性，一般使用 VPN 的人可能并未听说过 SS 或者不清楚 SS 是什么，这里我就从偏技术的角度来说一说 Shadowsocks。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>谈谈 VPN</title>
        <link>https://xinlake.life/blog/2019/07-talk-about-vpn/</link>
        <pubDate>2019-07-14, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/07-talk-about-vpn/</guid>
        <description>&lt;p&gt;在国内，VPN（Virtual Private Network）仍然作为很多人连接国际网路的主要方式。原理上，个人设备是连接到远端 VPN 服务器，通过 VPN 服务器来中转网络访问请求，一般情况下设备到 VPN 的连接不会被干预，所以个人设备可以通过 VPN 来访问国际网络。简单的说，VPN 提供了一条连接到 Web 的新通道，并且可以对通道上的通讯数据进行加密。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>电影印象《阿丽塔：战斗天使》</title>
        <link>https://xinlake.life/blog/2019/02-film-impressions/</link>
        <pubDate>2019-02-24, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/02-film-impressions/</guid>
        <description>&lt;p&gt;这部电影不需多做介绍了，卡梅隆编剧和监制，《阿凡达》级别的特效，相信这些已经有足够的魔力让你去了解去关注这部电影。不管你喜不喜欢科幻，《阿丽塔：战斗天使》都是不容错过的电影巨制，该片绝对会给到你全新的视听感受。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>2018 故事，遇见快餐厅的小姐姐</title>
        <link>https://xinlake.life/blog/2019/01-the-story-in-2018/</link>
        <pubDate>2019-01-26, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2019/01-the-story-in-2018/</guid>
        <description>&lt;p&gt;第一次见到 ZX 时她正踩在凳子上张贴海报，海报比较大，有个同事站在旁边看着会不会贴歪。她同事看着她贴，不停的说“歪了，歪了”、“那边要高一点”，而 ZX 却没有在听，而是用她自己的方法在做，并且反驳说“没歪”、“不会歪”，这让她同事有些不高兴。几分钟后终于贴好了，ZX 说“你看，上下对齐没歪吧”，原来她是找了墙面的水平线作为参照物，上下两端对齐参照物这样就不会贴歪了。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Android OpenCV 图像融合</title>
        <link>https://xinlake.life/blog/2018/12-android-opencv-seamless-cloning/</link>
        <pubDate>2018-12-26, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/12-android-opencv-seamless-cloning/</guid>
        <description>&lt;p&gt;在 Android 手机上合成图片也不麻烦，使用 OpenCV 图像无缝融合功能，通过少量的操作就可以将两副图像无缝的融合到一起，在要求不是很精确的场合，有着可以接受的合成效果。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>通过伪造请求来欺骗网站（四）</title>
        <link>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-4/</link>
        <pubDate>2018-10-23, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-4/</guid>
        <description>&lt;p&gt;账号登录只是 Cookie 的用途之一，事实上这种将匿名访问转为“实名”访问的技术无处不在。当你浏览网页时，服务器可以分配各种账号无关的 Cookie 来收集及追踪网页浏览。不过这个“实名”是客户端，就是说服务器可以知道是什么客户端浏览了什么内容。是机器层面的，不是人的身份。当有多个账号登录网站时，服务器就会分配多个 Cookie，如果这些 Cookie 信息均泄露，那么获得者就可以同时冒用多个账号的身份和网站交互，制造一些有趣的事情。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>通过伪造请求来欺骗网站（三）</title>
        <link>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-3/</link>
        <pubDate>2018-10-17, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-3/</guid>
        <description>&lt;p&gt;网站的有些功能需要登录才能使用（比如发表评论），Web 系统一般用 Cookie 来标识用户（客户端）身份，存储登录状态。当你登录网站后，客户端和服务器传输的数据里就会包含 Cookie 信息，服务器根据 Cookie 来判断你的登录状态。如果这个 Cookie 信息泄露了，那得到 Cookie 信息的人就可以使用你的身份和网站交互（比如发表评论），而且不需要登录，当然也不需要密码。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>通过伪造请求来欺骗网站（二）</title>
        <link>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-2/</link>
        <pubDate>2018-10-14, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request-2/</guid>
        <description>&lt;p&gt;&lt;a href=&#34;https://xinlake.life/2018/10-spoof-a-website-by-forging-a-request/index.html&#34;&gt;上一篇博文&lt;/a&gt;实际演示了通过程序伪造请求实现的“机器点赞”，这片博文是另外一个演示，把欺骗对象换成了新浪新闻，伪造的请求也是一条新闻评论的点赞。相对来说，新浪新闻的系统就比较有意思一点。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>通过伪造请求来欺骗网站（一）</title>
        <link>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request/</link>
        <pubDate>2018-10-12, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/10-spoof-a-website-by-forging-a-request/</guid>
        <description>&lt;p&gt;这是个实际演示，通过发送伪造的 HTTP Post 请求来欺骗网站服务器，达到人为的数据异常效果。这里欺骗的对象是一个新闻门户网站，伪造的请求是一条新闻评论的点赞。简单说就是一种机器“点赞”的效果。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>VLC 精细 Seek</title>
        <link>https://xinlake.life/blog/2018/10-vlc-fine-seek/</link>
        <pubDate>2018-10-07, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/10-vlc-fine-seek/</guid>
        <description>&lt;p&gt;当播放器播放一个视频时你可以在其界面上看到时间跳动，如果调整播放位置（Seek），播放器则会提示调整到的时间。这些时间一般都是用“秒”来计，如果一个视频只有 15 秒、10 秒、或是更短，那么如何 Seek 到 0.2 秒、0.5 秒、或是 1.5 秒的位置观看呢？下面就介绍一种 LibVLC 精细 Seek 的方法，&lt;em&gt;本文内容比较简单&lt;/em&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>电影印象《虎胆追凶》</title>
        <link>https://xinlake.life/blog/2018/09-film-impressions/</link>
        <pubDate>2018-09-22, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/09-film-impressions/</guid>
        <description>&lt;p&gt;这篇博文来说说《虎胆追凶》这部电影。我不建议你将本文观点作为你是否观影的参考依据，因为每个人的喜好不同，酸甜苦辣都有人爱。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>人物姿态识别与画面合成</title>
        <link>https://xinlake.life/blog/2018/08-human-pose/</link>
        <pubDate>2018-08-17, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/08-human-pose/</guid>
        <description>&lt;p&gt;你可能已经了解到一些电影特效大片的制作过程，拍摄时演员身旁是纯色屏障和一些道具，穿着奇怪的衣服对着空气拳打脚踢、施展魔法。而到了影片里，演员却出现在惊险的树林，或是跟凶恶的怪兽打斗，画面变得格外精彩。能演电影是幸运的事，借助于现代机器视觉、计算机图形技术，或许你拿起手机也可以拍摄出你的超级大片。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>在 Android 上运行图像识别</title>
        <link>https://xinlake.life/blog/2018/05-yolo-android/</link>
        <pubDate>2018-05-13, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/05-yolo-android/</guid>
        <description>&lt;p&gt;目标检测（Object Detection，检测识别图像中的物体，下称图像识别）神经网络之一 &lt;a href=&#34;https://pjreddie.com/darknet/yolo/&#34;&gt;YOLO&lt;/a&gt; 已经发布了第三版（YOLOv3），他名称挺有意思：You Only Look Once，你只看一次。他的作者也挺有意思，Darknet 项目的 &lt;a href=&#34;https://github.com/pjreddie/darknet/blob/master/LICENSE.fuck&#34;&gt;LICENSE.fuck&lt;/a&gt; 看上去有着一种随意、不讲究的个性。随着神经网络技术的兴起，机器视觉软件库之一 OpenCV 在其 3.3 版本中正式添加了 DNN 模块，以支持神经网络算法应用。他能够支持多种机器学习（包括深度学习）框架的预训练神经网络模型，对图像、视频应用神经网络算法。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>电影中的 AI 和生活中的 AI</title>
        <link>https://xinlake.life/blog/2018/05-ai-in-movies-and-in-life/</link>
        <pubDate>2018-05-08, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/05-ai-in-movies-and-in-life/</guid>
        <description>&lt;p&gt;科幻电影中的 AI 和现实生活中软件的 AI 是两码事了。电影中的 AI 是让机器具备了人类的特性，有本能，有意识，有情感，能思考，能学习成长，能自我创造出机器的世界。而现实生活中的 AI 软件，很多是机器学习（Machine Learning，后面会提到）的技术应用，让一些功能更加智能，让一些算法得以实现，让一些设想得以落地应用，但是软件本质没有变化，即固有的（人工编写的）程序逻辑和数据结构。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>人脸检测与面部识别</title>
        <link>https://xinlake.life/blog/2018/03-face-detection/</link>
        <pubDate>2018-03-27, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/03-face-detection/</guid>
        <description>&lt;p&gt;人脸检测很早就有了，以前的数码相机拍照的时候就能实时检测出人脸、笑脸。不过那时的检测会有一些要求，脸要摆正，最好不能带帽子，笑要露出牙齿会更容易检测到。现在随着深度学习技术的发展，人脸检测技术也有了巨大的变化。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>OpenCV DNN with GPU Computing</title>
        <link>https://xinlake.life/blog/2018/03-opencv-dnn-opencl/</link>
        <pubDate>2018-03-17, Sat</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/03-opencv-dnn-opencl/</guid>
        <description>&lt;p&gt;跑分第一的手机未必能跑得动神经网络，因为 CPU 的浮点计算能力很有限，在执行图像处理、机器视觉等一些计算密集型任务时，效率会非常低。处理那样的任务是 GPU 的专长，图形硬件不仅能 3D 绘图渲染，还能通过 OpenCL 等接口使用它的计算能力。这里将展示 PC 平台上图形硬件对神经网络的计算加速，在 OpenCV DNN 图像检测程序中对比 CPU 和 GPU 计算的效能差别。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Running GoogLeNet on Android device</title>
        <link>https://xinlake.life/blog/2018/03-android-opencv-dnn-googlenet/</link>
        <pubDate>2018-03-15, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/03-android-opencv-dnn-googlenet/</guid>
        <description>&lt;p&gt;这篇博文也是介绍 OpenCV DNN 模块在 Android 上的应用，运行 GoogLeNet 模型对摄像头画面做图像分类。相关的博文点击文章左下方的 OpenCV 标签可以看到。下图底部有一行字 coffee mug（咖啡杯），这是对画面中的这杯咖啡准确识别分类的结果。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Android OpenCV DNN Objects Detection</title>
        <link>https://xinlake.life/blog/2018/03-opencv-dnn-objects-detection/</link>
        <pubDate>2018-03-11, Sun</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/03-opencv-dnn-objects-detection/</guid>
        <description>&lt;p&gt;这标题都是英文，看了一下专业词汇多还真不好写中文。本文的内容是介绍 OpenCV DNN（Deep Neural Networks）模块在 Android 上的使用，运行深度学习模型来做图像的多目标识别。移动设备上基于深度学习的图像识别技术离实际应用还有段距离，不过该技术却有着惊艳的效果。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>不一样的春节</title>
        <link>https://xinlake.life/blog/2018/02-a-different-spring-festival/</link>
        <pubDate>2018-02-19, Mon</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/02-a-different-spring-festival/</guid>
        <description>&lt;p&gt;最重要的节日，最热闹的节日。最普通的人，最平常的方式。看看传统之外的过年，这里有不一样的春节。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>小米 6 刷机，卸载全家桶</title>
        <link>https://xinlake.life/blog/2018/02-sagit-new-experience/</link>
        <pubDate>2018-02-02, Fri</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2018/02-sagit-new-experience/</guid>
        <description>&lt;p&gt;Android 手机刷机主要分两步，先刷入 Recovery 程序然后可以刷一个你喜欢的 Android ROM。有些手机锁定了 BootLoader，这类手机要先解锁才能刷 Recovery。小米手机 6 的 Bootloader 也是锁了的，参考&lt;a href=&#34;http://www.miui.com/unlock/&#34;&gt;解锁流程&lt;/a&gt;解锁后才能刷机。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>Android Studio 3 几点变化</title>
        <link>https://xinlake.life/blog/2017/12-android-studio-3-changes/</link>
        <pubDate>2017-12-26, Tue</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2017/12-android-studio-3-changes/</guid>
        <description>&lt;p&gt;Android Studio 3 发布有段时间了，之前看到的是测试版就一直用着 2.2.3 没更新。前段时间项目模块升级，Android Studio 的更新提示已经是 3.0.1 正式版了，于是就对开发环境也做了一次升级。本文说几点 Android Studio 3.0.1 的几点变化，不是全面介绍 Android Studio 3 的新特性，而是一些项目迁移过程中感受到的 Android Studio 3.0.1 相对于 Android Studio 2.2.3 的几点变化。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>电影印象 2007-2017</title>
        <link>https://xinlake.life/blog/2017/09-film-impressions/</link>
        <pubDate>2017-09-28, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2017/09-film-impressions/</guid>
        <description>&lt;p&gt;今天不说代码，说说电影。有科幻的也讲故事的，有卖座的也票房一般的，说说一些电影印象。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>findViewById 的效率</title>
        <link>https://xinlake.life/blog/2017/08-findviewbyid/</link>
        <pubDate>2017-08-09, Wed</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2017/08-findviewbyid/</guid>
        <description>&lt;p&gt;findViewById 是 Android UI 设计里经常调用的一个方法，根据传入的 id 查找并返回对应的 view 对象。那么 Android 是如何去 find 一个 view 的呢，本文结合官方源码分析 findViewById 的原理。以下源码均来自 Android 7.1.1 （API 25） SDK。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>UPnP 媒体互联，为播放器添加 DLNA/UPnP 功能</title>
        <link>https://xinlake.life/blog/2017/07-mouter/</link>
        <pubDate>2017-07-20, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2017/07-mouter/</guid>
        <description>&lt;h2 id=&#34;1-有趣的&#34;&gt;1. 有趣的&lt;/h2&gt;
&lt;p&gt;在一个项目工作中偶然接触到 UPnP（Universal Plug and Play），一个基于本地网络的即插即用设备互联协议标准，后来经了解发现 UPnP 是个很有趣的东西。这篇博客分享一些 UPnP 的知识及介绍在 Android 应用中使用 UPnP（资料 &lt;a href=&#34;http://upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v2.0.pdf&#34;&gt;UPnP Device Architecture 2.0&lt;/a&gt;）。&lt;/p&gt;</description>
    </item>
    
    <item>
        <title>你好，世界</title>
        <link>https://xinlake.life/blog/2017/07-hello-world/</link>
        <pubDate>2017-07-20, Thu</pubDate>
        <author>xinlake@outlook.com (XinLake)</author>
        <guid>https://xinlake.life/blog/2017/07-hello-world/</guid>
        <description>很高兴，终于在 GitHub 上搭建起了我的个人博客。看了不少博客方案，最终选用了对 Windows 系统更加友好的 Hexo 博客框架，主题是默认的 landscape。这是我的第一篇博客，向世界打个招呼 “Hello World！”</description>
    </item>
    
    </channel>
</rss>